@using System.Collections.Generic
@using System.Linq
@using Accelerate.Features.Content.Models.Views
@using Accelerate.Foundations.Common.Helpers
@using Microsoft.AspNetCore.Http 
@model ChannelsPage
@{
    var currentTab = "All";
}
<div class="grid" x-data>
    <!-- Channels panel -->
    <div>
        <nav>
            <header>
                <hgroup>
                    <h1>Channels</h1>
                </hgroup>
            </header>
            <ul>
                @if (Model.ModalCreateChannel != null)
                {
                    <button class="material-icon flat primary" @@click="$events.emit('@Model.ModalCreateChannel.Target', { target: '@Model.ModalCreateChannel.Target' })">Add</button>
                }
            </ul>
        </nav>

        <nav style="width:100%;overflow-x: scroll;">
            <ul>
                @foreach (var tab in Model.ChannelsTabs.Items)
                {
                    var tabClass = currentTab == tab.Text ? "selected" : "";
                    <a role="button" style="width: 100%" class="flat primary tab @tabClass" href="@tab.Href">@tab.Text</a>
                }
            </ul>
        </nav>

        <hr />

        <nav>
            <header>
                <hgroup>
                    <h3>@currentTab</h3>
                </hgroup>
            </header>
            
        </nav>

        @if (Model.IsAuthenticated)
        {
            <div style="margin-bottom: 8px;" x-data="appFormResponse(@JsonSerializerHelper.SerializeObject(Model.FormCreatePost))"></div>
        }
        else
        {
            <article>Login to respond</article>
        }
        <!--Filter-->
        <div x-data="appNavFilters({
            filters: @JsonSerializerHelper.SerializeObject(Model.Filters),
            header: 'Posts',
            event: '@Model.FilterEvent'
        })"></div>
        <!--Feed-->
        <div x-data="listCards( {
            actionUrl: '@Model.ActionsApiUrl',
            searchUrl: '@Model.PostsApiUrl',
            filterEvent: '@Model.FilterEvent',
            userId: '@Model.UserId',
            actionEvent: 'action:post',
            filters: {
            },
            itemEvent: $store.wssContentPosts.getMessageEvent(),
          })">
        </div>
    </div>
</div>


<!-- Edit post -->
@if (Model.IsAuthenticated)
{
    <div x-data="modalForm(@JsonSerializerHelper.SerializeObject(Model.ModalCreateChannel))"></div>

    <div x-data="modalForm(@JsonSerializerHelper.SerializeObject(Model.ModalEditReply))"></div>

    <!-- Delete post -->
    <div x-data="modalForm(@JsonSerializerHelper.SerializeObject(Model.ModalDeleteReply))"></div>

    <!-- Share post -->
    <div x-data="modal({target: 'modal-share-post', title: 'Share post', text: 'test 123'  })"></div>
}