@using System.Collections.Generic
@using System.Linq
@using Accelerate.Features.Content.Models.Views
@using Accelerate.Foundations.Common.Helpers
@using Microsoft.AspNetCore.Http
@using Accelerate.Foundations.Content.Models.Data
@model ContentListPage
@{
    Layout = "/Views/Shared/_ContentPageLayout.cshtml";
}
<div class="w-full h-full container overflow-y-scroll"> 
    <!-- Channels panel --> 
    <!--
    <nav>
        <ul>
            if (Model.ModalCreateChannel != null)
            {
                <button class="material-icon flat primary" @@click="$events.emit('Model.ModalCreateChannel.Target', { target: 'Model.ModalCreateChannel.Target' })">Add</button>
            }
        </ul>
    </nav>
    -->
    <!--Feed-->
    <div x-data="aclSocialListFeedPosts( {
        url: '@Model.PostsApiUrl',
        params: {
            filters: [
            {
                name: 'related.listId',
                value: '@Model.Id'
            }],
            itemsPerPage: 1,
            page: 0,
            query: null,
            userId: '@Model.UserId'
        },
        mode: 'inline',
        websockets: true,
        searchOnInit: true,
        commentItems: [],
        menuItems: [],
        actionItems: [],
        })">
    </div>


    <hr />

    @if (Model.IsDeactivated)
    {
        <div>Reactivate your account to respond</div>
    }
    else if (Model.IsAuthenticated)
    {
        <div style="margin-bottom: 8px;" x-data="aclSocialFormPost({
            form: @JsonSerializerHelper.SerializeObject(Model.FormCreatePost),
            actions: formActions,
            formatActions: formatActions
        })"></div>
    }
    else
    {
        <div>
            <h4 class="w-full text-2xl font-bold">
                Login to respond
                <a role="button" class="flat secondary" style="right: 0" href="/account/login">Login</a>
            </h4>
        </div>
    }
</div>
</div>
