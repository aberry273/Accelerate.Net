@using System.Collections.Generic
@using System.Linq
@using Accelerate.Features.Content.Models.Views
@using Accelerate.Foundations.Common.Helpers
@using Microsoft.AspNetCore.Http 
@model ThreadPage

<div x-data="{
    filterEvent: 'onFilterChange',
    actionEvent: 'action:post',
    quoteEvent: 'quote:post',
    init() {}
  }">
     
    @if (Model.ChannelLink != null)
    {
        <nav>
            <ul>
                <header>
                    <hgroup>
                        <h1>@Model.ChannelLink.Text</h1>
                    </hgroup>
                </header>
            </ul>
        </nav>
        <div class="dense " style="border: 0px">
            <summary class="primary">
                <a href="@Model.ChannelLink.Href" style="text-decoration:none;">
                    <i class="material-icons">chevron_left</i>
                    <sup class="primary">
                        <strong>
                            @Model.ChannelLink.Text
                        </strong>
                    </sup>
                </a>
            </summary>
        </div>
    }
    @if(Model.ParentLink != null)
    {
        <div class="dense ">
            <summary class="primary">
                <a href="@Model.ParentLink.Href" style="text-decoration:none;">
                    <i class="material-icons">expand_less</i>
                    <sup class="primary">
                        <strong>
                            @Model.ParentLink.Text
                        </strong>
                    </sup>
                </a>
            </summary>
        </div>
    }

    <!-- Original Post -->
    <div x-data="cardPost({
        item:  @JsonSerializerHelper.SerializeObject(Model.Item),
        userId: '@Model.UserId',
        })"></div>

    <!-- Response Form -->
    <div x-data="appFormResponse(@JsonSerializerHelper.SerializeObject(Model.FormCreateReply))"></div>
     
     <!-- Filters -->
    <div x-data="appNavFilters({
        filters: @JsonSerializerHelper.SerializeObject(Model.Filters),
        event: '@Model.FilterEvent'
    })"></div>

    <!-- Replies -->
    <div x-data="listCards( {
        actionUrl: '/api/contentpostactivity',
        searchUrl: '/api/contentsearch/posts',
        filterEvent: '@Model.FilterEvent',
        actionEvent: '@Model.ActionEvent',
        itemEvent: $store.wssContentPosts.getMessageEvent(),
        parentId: '@Model.Item.Id',
        filters: {
            parentId: ['@Model.Item.Id']
        },
        userId: '@Model.UserId',
        items: @JsonSerializerHelper.SerializeObject(Model.Replies)
    })">
    </div>
  

</div>

<!-- Modals -->
<!-- Edit post -->
<div x-data="modalForm(@JsonSerializerHelper.SerializeObject(Model.ModalEditReply))"></div>

<!-- Delete post -->
<div x-data="modalForm(@JsonSerializerHelper.SerializeObject(Model.ModalDeleteReply))"></div>

<!-- Share post -->
<div x-data="modal({target: 'modal-share-post', title: 'Share post', text: 'test 123'  })"></div>
