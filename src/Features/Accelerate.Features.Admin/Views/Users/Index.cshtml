@using System.Collections.Generic
@using System.Linq
@using Accelerate.Foundations.Account.Models.Entities
@using Accelerate.Foundations.Common.Helpers
@using Accelerate.Features.Admin.Models.Views
@using Microsoft.AspNetCore.Http
@model AdminUserPage
@{
    Layout = "/Views/Shared/_AdminPageLayout.cshtml";
    var currentTab = "All";
}

<div class="w-full h-full container overflow-y-scroll">
    <!-- Channels panel -->
    <!--
    <nav>
        <ul>
            if (Model.ModalCreateChannel != null)
            {
                <button class="material-icon flat primary" @@click="$events.emit('Model.ModalCreateChannel.Target', { target: 'Model.ModalCreateChannel.Target' })">Add</button>
            }
        </ul>
    </nav>
    -->
    <div>
        Last indexed @Model.LastIndex
    </div>
    <section x-data="{
        init() {
            this.$events.on('@Model.Form.Event', (val)=>
            {
                location.reload();
            })
            this.$events.on('@Model.DeactivateForm.Event', (val) => {
                location.reload();
            })
            this.$events.on('@Model.ReactivateForm.Event', (val) => {
                location.reload();
            })
            this.$events.on('@Model.DeleteForm.Event', (val) => {
                location.reload();
            })
        }
        }">

        <div class="w-full dark:bg-gray-800 lg:w-6/12 xl:w-5/12">
            <h2 class="w-full text-2xl font-bold">Account</h2>
            <div x-data="aclFormAjax(@JsonSerializerHelper.SerializeObject(Model.Form))"></div>
        </div>
    </section>
    @if(Model.HasProfile)
    {
        <div class="" x-transition>
            <h2 class="w-full text-2xl font-bold">Profile</h2>
            <div class="grids">
                <div x-data="aclFormAjax(@JsonSerializerHelper.SerializeObject(Model.ProfileImageForm))"></div>
                <div x-data="aclFormAjax(@JsonSerializerHelper.SerializeObject(Model.ProfileForm))"></div>
            </div>
        </div>
    }
    @if (Model.Item.Status == Accelerate.Foundations.Account.Models.Entities.AccountUserStatus.Active)
    {
        <section>
            <div class="" x-transition>
                <h2 class="w-full text-2xl font-bold">De-activate account</h2>
                <i>This account will be automatically deleted 30 days after deactivating the account</i>
                <i>The posts will not be deleted, but will not be associated with your account anymore</i>
                <div class="grids">
                    <div x-data="aclFormAjax(@JsonSerializerHelper.SerializeObject(Model.DeactivateForm))"></div>
                </div>
            </div>
        </section>
    }
    @if (Model.Item.Status == Accelerate.Foundations.Account.Models.Entities.AccountUserStatus.Deactivated)
    {
        <section>
            <div class="" x-transition>
                <h2 class="w-full text-2xl font-bold">Re-activate account</h2>
                <i>Click the button below to re-activate the account</i>
                <div class="grids">
                    <div x-data="aclFormAjax(@JsonSerializerHelper.SerializeObject(Model.ReactivateForm))"></div>
                </div>
            </div>
        </section>
        <section>
            <div class="" x-transition>
                <h2 class="w-full text-2xl font-bold">Delete account</h2>
                <i>Click the button below to delete the account. Your posts will continue to exist but will not be associated with your account. Your account will be scrubbed.</i>
                <div class="grids">
                    <div x-data="aclFormAjax(@JsonSerializerHelper.SerializeObject(Model.DeleteForm))"></div>
                </div>
            </div>
        </section>
    }

</div>





<!-- Index modal -->
@if (Model.ModalIndex != null)
{
    <div x-data="aclModalFormAjax(@JsonSerializerHelper.SerializeObject(Model.ModalIndex))"></div>
}
<!-- Profile modal -->
@if (Model.ModalProfile != null)
{
    <div x-data="aclModalFormAjax(@JsonSerializerHelper.SerializeObject(Model.ModalProfile))"></div>
}